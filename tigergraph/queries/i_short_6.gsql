use graph ldbc
drop query i_short_6

create query i_short_6(UINT vid) for graph ldbc {
    SumAccum<UINT> @postID;
    SumAccum<UINT> @forumID;
    SumAccum<UINT> @personID;
    SumAccum<String> @firstName;
    SumAccum<String> @lastName;
    SumAccum<Uint> @@postID;
    
	SetAccum<UINT> @@forumSet;
	SetAccum<UINT> @@personSet;    
	SetAccum<UINT> @@postSet;    
	SetAccum<UINT> @@commentSet;    

	Post = {post.*};
	Reply = {comments.*};
 	ReplyToPost = {comments.*};
    Forum = {forum.*};

	Post = SELECT s
			FROM Post:s
			WHERE s.id == vid
			ACCUM @@postSet += s.id;
	
	Reply = SELECT s
			FROM Reply:s
			WHERE s.id == vid
			ACCUM @@commentSet += s.id;

	//if message is comment, get 1 hop comment to post by iterating comments_replyOf_comment
	//then get post from 1 hop comment
	IF Reply.size() == 1 THEN
		WHILE Reply.size() != 0 LIMIT 100 DO
			ReplyToPost = Reply;
			Reply = SELECT t
					FROM Reply:s-(comments_replyOf_comments)->:t;
		END;
		Post = SELECT t
				FROM ReplyToPost:s-(comments_replyOf_post)->:t;
	END;

	Forum = SELECT t
				FROM Post:s-(forum_containerOf_post_reverse)->:t
				ACCUM @@forumSet += t.id;

	//get moderator info and save to forum accums
	Forum = SELECT s
			FROM Forum:s-(forum_hasModerator_person)->:t
			ACCUM s.@personID = t.id,
				s.@firstName = t.firstName,
				s.@lastName = t.lastName,
				@@personSet += t.id;


	
    print Forum.id, Forum.title, Forum.@personID, Forum.@firstName, Forum.@lastName;
    
}
install query i_short_6
